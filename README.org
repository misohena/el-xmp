* Emacs Extensible Metadata Platform Library

(machine translated from [[file:README-ja.org][README-ja.org]])

el-xmp is an Emacs library for getting and setting metadata based on the XMP (Extensible Metadata Platform) specification, and some application commands. For example, it can be used to get and set the rating of a photo, or to get author information in a PDF.

** Supported file formats

XMP / JPEG / PDF / TIFF (including ARW, CR2, NEF) / MP3(ID3) / ORG / any other format that can scan files and find XMPPackets

See the variable ~xmp-file-name-handler-alist~ for more information.

** xmp-commands.el

xmp-commands.el provides a set of commands for manipulating the XMP properties of any file.

The target file of those commands is inferred from the current point, buffer, etc. by ~xmp-file-name-at-point~ function. By default, filename inference from Dired, Image Dired, org-mode links, thing-at-point, buffer-file-name, and read-file-name is supported.

When these commands change properties, they do not change the target file directly, but instead create a sidecar file (.xmp file) to record the new property value. This method protects the contents of the target file and allows properties to be shared through network storage, etc. Depending on the settings, properties can also be stored in a SQLite database. This method makes it difficult to share properties, but has the advantage of not having sidecar files scattered all over the place. Depending on the settings, you can choose which to use based on conditions such as directory or extension.

Commands to change properties:

- ~xmp-rate-file~
- ~xmp-rate-file-1~
- ~xmp-rate-file-2~
- ~xmp-rate-file-3~
- ~xmp-rate-file-4~
- ~xmp-rate-file-5~
- ~xmp-rate-file-0~
- ~xmp-rate-file--1~
- ~xmp-set-file-label~
- ~xmp-set-file-subjects~
- ~xmp-add-file-subjects~
- ~xmp-remove-file-subjects~
- ~xmp-set-file-title~
- ~xmp-set-file-description~
- ~xmp-set-file-creators~
- ~xmp-edit-file-properties~
- ~xmp-edit-file-properties-all~

Commands to display properties:
- ~xmp-show-file-properties~
- ~xmp-show-file-properties-all~
- ~xmp-show-file-rating~
- ~xmp-show-file-label~
- ~xmp-show-file-subjects~
- ~xmp-show-file-title~
- ~xmp-show-file-description~
- ~xmp-show-file-creators~

Commands for managing databases:
- ~xmp-move-file-properties-from-db-to-sidecar~
- ~xmp-move-file-properties-from-sidecar-to-db~
- ~xmp-move-dir-file-properties-from-db-to-sidecar~
- ~xmp-move-dir-file-properties-from-sidecar-to-db~
- ~xmp-list-managed-files-in-dir~
- ~xmp-list-stray-file-metadata-in-db~
- ~xmp-relocate-stray-file-metadata-in-dir~

** xmp-dired.el

xmp-dired.el adds XMP-related features to Dired.

Currently, it provides the following commands:

- Mark files
  - ~xmp-dired-mark-rating~
  - ~xmp-dired-mark-label~
  - ~xmp-dired-mark-subjects~
  - ~xmp-dired-mark-title~
  - ~xmp-dired-mark-description~
  - ~xmp-dired-mark-creator~
  - ~xmp-dired-mark-stray-sidecar-files~
- Change properties of marked files
  - ~xmp-dired-do-rate~
  - ~xmp-dired-do-set-label~
  - ~xmp-dired-do-set-subjects~
  - ~xmp-dired-do-add-subjects~
  - ~xmp-dired-do-remove-subjects~
  - ~xmp-dired-do-set-title~
  - ~xmp-dired-do-set-description~
  - ~xmp-dired-do-set-creators~
  - ~xmp-dired-do-edit-properties~
  - ~xmp-dired-do-edit-properties-all~
- Filter by properties
  - ~xmp-dired-filter-property~
  - ~xmp-dired-filter-clear~
  - ~xmp-dired-filter-rating~
  - ~xmp-dired-filter-label~
  - ~xmp-dired-filter-subjects~
  - ~xmp-dired-filter-title~
  - ~xmp-dired-filter-description~
  - ~xmp-dired-filter-creators~
  - ~xmp-dired-filter-toggle-sidecar~
  - ~xmp-dired-filter-hide-sidecar~
  - ~xmp-dired-filter-show-sidecar~
- Sort by properties
  - ~xmp-dired-sort-by-property~
  - ~xmp-dired-sort-clear~
  - ~xmp-dired-sort-by-rating~
  - ~xmp-dired-sort-by-label~
  - ~xmp-dired-sort-by-subjects~
  - ~xmp-dired-sort-by-title~
  - ~xmp-dired-sort-by-description~
  - ~xmp-dired-sort-by-creators~
- Add columns to display properties
  - ~xmp-dired-add-column~
  - ~xmp-dired-remove-column~
  - ~xmp-dired-remove-all-columns~
  - ~xmp-dired-toggle-column~
  - ~xmp-dired-toggle-column-rating~
  - ~xmp-dired-toggle-column-label~
  - ~xmp-dired-toggle-column-subjects~
  - ~xmp-dired-toggle-column-title~
  - ~xmp-dired-toggle-column-description~
  - ~xmp-dired-toggle-column-creators~

In addition, the commands in xmp-commands.el can be used with Dired.

[[file:screenshot/xmp-dired-filter-and-add-columns.png]]

(Figure: Filtering files by Rating in Dired and adding Rating and Subject as columns)

** xmp-image-dired.el

xmp-image-dired.el adds XMP-related features to image-dired.

Currently, it provides the following commands:

- Filter thumbnails (temporarily hide thumbnails depending on conditions)
  - ~xmp-image-dired-filter-property~
  - ~xmp-image-dired-filter-clear~
  - ~xmp-image-dired-filter-rating~
  - ~xmp-image-dired-filter-label~
  - ~xmp-image-dired-filter-subjects~
  - ~xmp-image-dired-filter-title~
  - ~xmp-image-dired-filter-description~
  - ~xmp-image-dired-filter-creators~
- Sort thumbnails
  - ~xmp-image-dired-sort-by-property~
  - ~xmp-image-dired-sort-by-file-name~
  - ~xmp-image-dired-sort-by-rating~
  - ~xmp-image-dired-sort-by-label~
  - ~xmp-image-dired-sort-by-subjects~
  - ~xmp-image-dired-sort-by-title~
  - ~xmp-image-dired-sort-by-description~
  - ~xmp-image-dired-sort-by-creators~

In addition, the commands in xmp-commands.el can be used with image-dired.

[[file:./screenshot/xmp-image-dired.png]]

(Figure: Photos are marked based on their ratings in Dired and displayed in image-dired)

** xmp-editor.el

xmp-editor.el provides an XMP editor UI using [[https://www.gnu.org/software/emacs/manual/html_mono/widget.html][The Emacs Widget Library]]. Commands such as ~xmp-edit-file-properties~ and ~xmp-dired-do-edit-properties~ use this library.

For example, you can open an editor to edit XMP properties with the following code:

#+begin_src elisp
;; Open a buffer to edit the properties of jpg files in the current directory all at once.
(xmp-editor-open-files (directory-files "." t "\\.jpg$"))

;; Open a buffer to edit files marked in the Dired buffer all at once.
;; The only XMP property to edit is dc:title.
(xmp-editor-open-files (dired-get-marked-files) (list xmp-dc:title))
#+end_src

[[file:./screenshot/xmp-editor.png]]

(Figure: Editing photo metadata)

** xmp-setup.el

xmp-setup.el provides an example of el-xmp configuration. You can use it by adding the following code to init.el.

#+begin_src elisp
(with-eval-after-load "dired"
  (require 'xmp-setup)
  (xmp-setup-default))
#+end_src

Assign keys to operate XMP properties to dired and image-dired.

| Keys  | Function                  |
|-------+---------------------------|
| ' S r | Set rating                |
| ' S l | Set label                 |
| ' S s | Set subjects              |
| ' A s | Add subjects              |
| ' R s | Remove subjects           |
| ' S t | Set title                 |
| ' S d | Set description           |
| ' S c | Set creators              |
|-------+---------------------------|
| ' E p | Edit properties           |
| ' E a | Edit all properties       |
|-------+---------------------------|
| ' g p | Get properties            |
| ' g a | Get all properties        |
| ' g r | Get rating                |
| ' g l | Get label                 |
| ' g s | Get subjects              |
| ' g t | Get title                 |
| ' g d | Get description           |
| ' g c | Get creators              |
|-------+---------------------------|
| ' m r | Mark by rating            |
| ' m l | Mark by label             |
| ' m s | Mark by subjects          |
| ' m t | Mark by title             |
| ' m d | Mark by description       |
| ' m c | Mark by creators          |
| ' m S | Mark stray sidecar files  |
|-------+---------------------------|
| ' f p | Filter by property        |
| ' f - | Clear filter              |
| ' f r | Filter by rating          |
| ' f l | Filter by label           |
| ' f s | Filter by subjects        |
| ' f t | Filter by title           |
| ' f d | Filter by description     |
| ' f c | Filter by creators        |
|-------+---------------------------|
| ' s p | Sort by property          |
| ' s - | Clear sort                |
| ' s r | Sort by rating            |
| ' s l | Sort by label             |
| ' s s | Sort by subjects          |
| ' s t | Sort by title             |
| ' s d | Sort by description       |
| ' s c | Sort by creators          |
|-------+---------------------------|
| ' c p | Toggle property column    |
| ' c - | Remove all columns        |
| ' c r | Toggle rating column      |
| ' c l | Toggle label column       |
| ' c s | Toggle subjects column    |
| ' c t | Toggle title column       |
| ' c d | Toggle description column |
| ' c c | Toggle creators column    |
|-------+---------------------------|
| ' l m | List managed file status  |
| ' l S | List stray metadata       |
| ' R S | Relocate stray metadata   |

You can also avoid using this and build your own user interface using Hydra, Transient, etc.

** xmp.el

xmp.el provides basic functions for manipulating XMP.

The following code is an example of getting properties from a file.

#+begin_src elisp
(require 'xmp)

(xmp-get-file-properties "test/xmp-test-value-types.xmp" 'all)

(xmp-get-file-properties "test/xmp-test-uzumaki.jpg" 'all)

(xmp-get-file-properties "XMPSpecificationPart1.pdf" 'all)

(xmp-get-file-properties "test/xmp-test-uzumaki.jpg"
                         (list (xmp-xml-ename xmp-xmp: "Rating")
                               (xmp-xml-ename xmp-dc: "title")))

(xmp-pvalue-as-text
 (xmp-get-file-property "test/xmp-test-uzumaki.jpg"
                        (xmp-xml-ename xmp-xmp: "Rating")))
#+end_src

The following code is an example of setting properties to a file.

#+begin_src elisp
(xmp-set-file-properties "tmp-example.xmp"
  (list
    (cons xmp-xmp:Rating "5")
    (cons xmp-dc:title
          (xmp-pvalue-make-alt
            (list
              (xmp-pvalue-make-text
                "Test Title"
                (list (xmp-pvalue-make-named xmp-xml:lang 'text "x-default")))
              (xmp-pvalue-make-text
                "Test Title"
                (list (xmp-pvalue-make-named xmp-xml:lang 'text "en")))
              (xmp-pvalue-make-text
                "テストタイトル"
                (list (xmp-pvalue-make-named xmp-xml:lang 'text "ja"))))))))

(xmp-set-file-property "tmp-example.xmp" xmp-xmp:Rating "3")
#+end_src

There are also lower level functions for the DOM after parsing the XML, and functions for manipulating the XMP property values (Parsed Values) after parsing the DOM.

#+begin_src elisp
(let* ((dom (xmp-file-read-rdf "test/xmp-test-uzumaki.jpg")) ;; File to XML DOM
       (property-elements (xmp-get-property-elements dom 'all)) ;; XML DOM to Property Element List
       (property-pvalues (mapcar #'xmp-parse-property-element property-elements)) ;; Property Element List to Parsed Value List
       (rating-pvalue (xmp-xml-ename-alist-get xmp-xmp:Rating property-pvalues))) ;; Pick xmp:Rating property
  ;; PValue to String
  (xmp-pvalue-as-text rating-pvalue))
#+end_src

** xmp-xml.el

xmp-xml.el is the library that xmp.el uses to process XML. Since xmp.el needs to process XML namespaces correctly, it does not use Emacs' libxml support. xml.el also had bugs so it was not used. We used nxml-parse.el which had the fewest problems. We did not use dom.el either as it cannot handle expanded names.

The most important thing about xmp-xml.el is how it handles XML expanded names. Element names and attribute names are represented not as strings or symbols but as expanded names, which are pairs of namespace names and local names.

The following code creates an object that represents the expanded name whose namespace name is ~http://ns.adobe.com/xap/1.0/~ and whose local name is ~Label~.

#+begin_src elisp
(xmp-xml-ename (xmp-xml-ns-name "http://ns.adobe.com/xap/1.0/") "Label")
#+end_src

Be sure to use the following functions to create expanded names, get elements, and compare them.

- ~xmp-xml-ename~
- ~xmp-xml-ename-ns~
- ~xmp-xml-ename-local~
- ~xmp-xml-ename-equal~
- ~xmp-xml-ename<~
- ~xmp-xml-ename-alist-get~
- ~xmp-xml-ename-assoc~
- ~xmp-xml-ename-member~

Also, use the following functions to convert namespace names.

- ~xmp-xml-ns-name~
- ~xmp-xml-ns-name-string~

Commonly used namespace names and expanded names are defined as variables.

Namespace name:
- ~xmp-xmlns:~
- ~xmp-xml:~

Expanded name:
- ~xmp-xml:lang~
- ~xmp-xml:space~
- ~xmp-xml:base~
- ~xmp-xml:id~

Many namespaces and expanded names used in XMP are defined as variables in xmp.el (e.g. ~xmp-dc:title~, ~xmp-xmp:Rating~).

** xmp-exif.el

A library that parses EXIF and converts it to XMP.

** xmp-tiff.el

A library for parsing TIFF and reading tag information.

** xmp-pdf.el

A library for parsing PDFs and reading metadata.

The Emacs Lisp implementation cannot read many PDF files, so please install pdfinfo and set the variable ~xmp-file-pdfinfo-program~ if possible.

** xmp-file-reader.el

A library for reading binary files.

** xmp-sqlite.el

A library for adding SQLite-based functionality to xmp.el.

Implement a persistent cache mechanism that will not be lost even if Emacs is terminated. By default it creates the database file in ~/.emacs.d/el-xmp/el-xmp-file-cache.db .

Also, property change data can be stored in the database instead of in the sidecar file. The database is different from the cache, and is created in ~/.emacs.d/el-xmp/el-xmp-file-mod.db by default.

** User-defined XMP properties

If a user wants to add a new property, first register the namespace information (namespace name (URI) and prefix) in the variable ~xmp-user-defined-namespaces~ (if the variable ~xmp-predefined-namespaces~ already contains it, this is not necessary. Set the prefix so that it does not overlap with other prefixes). This ensures that the namespace is output and displayed correctly. If this is not set correctly, the namespace prefixes may be output in sequential numbers such as ns1, ns2, ....

Next, register the property information (name and type) in the variable ~xmp-user-defined-properties~. Some commands use this information to change the UI to an appropriate one (even if not set, the UI may be created by inferring it from the value).

The list of properties that the command ~xmp-show-file-properties~ displays by default can be set in the variable ~xmp-show-file-properties-target~.

The list of properties that the commands ~xmp-edit-file-properties~ and ~xmp-dired-do-edit-properties~ edit by default can be set in the variable ~xmp-editor-target-properties~

If a property is read frequently, it is recommended to register it as a cache target. The cache target can be set by the variable ~xmp-file-cache-target-properties~. Cached properties are stored in the in-memory cache and the SQLite database cache when their values are read or written, making subsequent reads faster.
